;;; Automatically generated on Mon Feb  2 21:01:34 2015
;;; Invoked by winkar@winkar-Lenovo-G480 using 24.4.2
(setq-default session-file-alist '(("~/workspace/test/test.py" 1592 1592 1 nil nil 8630 (overwrite-mode)) ("~/winkar_emacs/.emacs" 1851 1854 1 nil nil 1852 (overwrite-mode)) ("~/winkar_emacs/.emacs.d/elpa/elpy-20141031.945/elpy-autoloads.el" 1151 nil 1 nil nil 1151 (overwrite-mode)) ("~/winkar_emacs/.emacs.d/elpa/find-file-in-project-20141214.1952/find-file-in-project-autoloads.el" 897 nil 1 nil nil 897 (overwrite-mode)) ("~/winkar_emacs/.emacs.d/elpa/highlight-indentation-20150122.44/highlight-indentation-autoloads.el" 947 nil 1 nil nil 947 (overwrite-mode)) ("~/winkar_emacs/.emacs.d/elpa/idomenu-20141123.1320/idomenu-autoloads.el" 377 nil 1 nil nil 377 (overwrite-mode)) ("~/winkar_emacs/.emacs.d/elpa/pyvenv-20150110.421/pyvenv-autoloads.el" 1889 nil 1 nil nil 1889 (overwrite-mode)) ("~/winkar_emacs/.emacs.d/elpa/neotree-20150131.808/neotree-autoloads.el" 1254 nil 1 nil nil 1254 (overwrite-mode)) ("~/winkar_emacs/.emacs.d/elpa/elscreen-20140421.414/elscreen-autoloads.el" 648 nil 1 nil nil 648 (overwrite-mode))))
(setq-default file-name-history '("~/workspace/test/test.py" "~/winkar_emacs/.emacs.d/bookmarks" "~/.emacs.d/bookmarks" "~/.emacs.d/elpa/elpy-20141031.945/elpy-autoloads.el" "~/.emacs.d/elpa/find-file-in-project-20141214.1952/find-file-in-project-autoloads.el" "~/.emacs.d/elpa/highlight-indentation-20150122.44/highlight-indentation-autoloads.el" "~/.emacs.d/elpa/idomenu-20141123.1320/idomenu-autoloads.el" "~/.emacs.d/elpa/pyvenv-20150110.421/pyvenv-autoloads.el" "~/winkar_emacs/README.md" "~/Documents/winkar.github.io/_posts/2015-01-24-wechall.md" "~/winkar_emacs/.emacs" "~/winkar_emacs/" "~/.emacs.d/elpa/neotree-20150131.808/neotree-autoloads.el" "~/.emacs.d/elpa/elscreen-20140421.414/elscreen-autoloads.el" "/home/winkar"))
(setq-default search-ring '("elpy" "elsc" "el" "powerline" "emac" "pymacs" "elscreen"))
(setq-default regexp-search-ring '("lin" "line" "sublim" "sublime" "elscree"))
(setq-default bookmark-history '("test.py" "2015-01-24-wechall.md" ".emacs"))
(setq-default command-history '((neotree-projectile-action) (elpy-find-file nil) (elpy-goto-definition) (elpy-refactor) (evil-delete 8727 8727 (quote exclusive) nil nil) (evil-delete 8728 8741 (quote line) nil nil) (evil-delete 8728 8744 (quote line) nil nil) (evil-delete 8758 8773 (quote line) nil nil) (evil-delete 8744 8759 (quote line) nil nil) (evil-delete 8744 8764 (quote line) nil nil) (evil-delete 8728 8729 (quote line) nil nil) (evil-delete 1817 1864 (quote line) nil nil) (list-packages nil) (linum-mode (quote toggle)) (evil-delete 401 407 (quote exclusive) nil nil) (evil-delete 409 424 (quote line) nil nil) (evil-record-macro 113) (split-window-horizontally nil) (evil-record-macro 15) (neotree-toggle) (neotree-show) (cd "~/winkar_emacs/") (evil-replace 386 387 (quote exclusive) 102) (evil-replace 387 388 (quote exclusive) 52) (evil-replace 387 388 (quote exclusive) 54) (evil-replace 382 383 (quote exclusive) 62) (evil-replace 379 380 (quote exclusive) 60)))
(setq-default evil-ex-history '(#("w" 0 1 (ex-index 1))))
(setq-default evil-search-forward-history '("lin" "line" "sublim" "sublime"))
(setq-default extended-command-history '("elpy-goto-definition" "list-packages" "linum-mode" "neotree-projectile-action" #("neotree-toggle" 0 7 (face helm-match)) "neotree-show" #("cd" 0 2 (face helm-match)) #("package-install" 0 1 (face helm-match) 1 2 (face helm-match) 2 3 (face helm-match) 3 4 (face helm-match) 4 5 (face helm-match) 5 6 (face helm-match) 6 7 (face helm-match) 8 9 (face helm-match)) #("load-theme" 0 7 (face helm-match))))
(setq-default helm-c-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (cl-loop for i in command-history unless \.\.\. collect \.\.\.)) (type . sexp)))
(setq-default helm-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" . helm-find-many-files) ("Find file as root" . helm-find-file-as-root) ("Find file other window" . find-file-other-window) ("Find file other frame" . find-file-other-frame) ("Open dired in file's directory" . helm-open-dired) ("Grep File(s) `C-u recurse'" . helm-find-files-grep) ("Zgrep File(s) `C-u Recurse'" . helm-ff-zgrep) ("Pdfgrep File(s)" . helm-ff-pdfgrep) ("Insert as org link" . helm-files-insert-as-org-link) ("Checksum File" . helm-ff-checksum) ("Ediff File" . helm-find-files-ediff-files) ("Ediff Merge File" . helm-find-files-ediff-merge-files) ("Etags `M-., C-u tap, C-u C-u reload tag file'" . helm-ff-etags-select) ("View file" . view-file) ("Insert file" . insert-file) ("Add marked files to file-cache" . helm-ff-cache-add-file) ("Delete file(s)" . helm-delete-marked-files) ("Open file externally (C-u to choose)" . helm-open-file-externally) ("Open file with default tool" . helm-open-file-with-default-tool) ("Find file in hex dump" . hexl-find-file))))
(setq-default helm-ff-history '("/home/winkar/winkar_emacs/"))
(setq-default helm-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (cl-loop for i in command-history unless \.\.\. collect \.\.\.)) (type . sexp)))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" . helm-find-many-files) ("Find file as root" . helm-find-file-as-root) ("Find file other window" . find-file-other-window) ("Find file other frame" . find-file-other-frame) ("Open dired in file's directory" . helm-open-dired) ("Grep File(s) `C-u recurse'" . helm-find-files-grep) ("Zgrep File(s) `C-u Recurse'" . helm-ff-zgrep) ("Pdfgrep File(s)" . helm-ff-pdfgrep) ("Insert as org link" . helm-files-insert-as-org-link) ("Checksum File" . helm-ff-checksum) ("Ediff File" . helm-find-files-ediff-files) ("Ediff Merge File" . helm-find-files-ediff-merge-files) ("Etags `M-., C-u tap, C-u C-u reload tag file'" . helm-ff-etags-select) ("View file" . view-file) ("Insert file" . insert-file) ("Add marked files to file-cache" . helm-ff-cache-add-file) ("Delete file(s)" . helm-delete-marked-files) ("Open file externally (C-u to choose)" . helm-open-file-externally) ("Open file with default tool" . helm-open-file-with-default-tool) ("Find file in hex dump" . hexl-find-file))))
(setq-default minibuffer-history '("neotr" "elpy" "elpyt" "elpyg-" "*Packages*" "list" "list-" "listp" "line" "linmo" ".emacs" "2015-01-24-wechall.md" #("htpasswd里，这个文件访问不到。于是乎……看了看下面写的限制，貌似只对get进行了限制，那就简单了。直接用post查看该界面，就能通过了。" 0 72 (fontified t)) #("<ome/winkar/winkar_emacs/" 0 25 (face neo-root-dir-face)) "neotreeprje" "*Warnings*" " *NeoTree*" "splitwinho" "splitwin" "neotree" "neo" "cd " "packagei" "molokai" "load-th" "grahammolokai" "loadt" "loadth" "load"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default yes-or-no-p-history '("yes"))
